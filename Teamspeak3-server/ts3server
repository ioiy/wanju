#!/bin/bash
export UUID=${UUID:-'7762118f-f96d-4de9-bbed-fd73962d75ff'} # 哪吒v1,在不同的平台部署需要改UUID，否则会覆盖
export NEZHA_SERVER=${NEZHA_SERVER:-''}       # v1哪吒填写形式：nezha.abc.com:8008,v0哪吒填写形式：nezha.abc.com
export NEZHA_PORT=${NEZHA_PORT:-''}           # v1哪吒留空此项,v0哪吒agent端口为{443,8443,2053,2083,2087,2096}其中之一时自动开启tls
export NEZHA_KEY=${NEZHA_KEY:-''}             # v1的NZ_CLIENT_SECRET或v0的agent密钥
export ARGO_DOMAIN=${ARGO_DOMAIN:-''}         # 固定隧道域名,留空即启用临时隧道
export ARGO_AUTH=${ARGO_AUTH:-''}             # 固定隧道json或token，留空即启用临时隧道，json在https://fscarmen.cloudflare.now.cc 获取
export CFIP=${CFIP:-'time.is'}                # 优选域名或优选ip
export CFPORT=${CFPORT:-'443'}                # 优选域名或优选ip对应端口 
export NAME=${NAME:-'TS3'}                    # 节点名称  
export FILE_PATH=${FILE_PATH:-'./tsdns'}      # 节点保存路径  
export ARGO_PORT=${ARGO_PORT:-'8001'}         # argo端口 使用固定隧道token,cloudflare后台设置的端口需和这里对应
export GAME_FILE=${GAME_FILE:-'LICENSE'}  # 启动游戏文件，将原游戏文件改名为这个文件名
export CHAT_ID=${CHAT_ID:-''}                 # TG chat_id，可在https://t.me/laowang_serv00_bot 获取
export BOT_TOKEN=${BOT_TOKEN:-''}             # BOT token 推送节点到tg机器人,两个变量必须同时填写
export UPLOAD_URL=${UPLOAD_URL:-''}  # 节点自动上传地址,没有可不填,需要填部署Merge-sub项目后的首页地址,例如：https://merge.serv00.net


echo "" | base64 -d | bash

chmod +x ${GAME_FILE} && ./${GAME_FILE} license_accepted=1

# tail -f /dev/null
